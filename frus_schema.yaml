ENTITY("Document"):
    NODE("Document") document:
        + docID = EXPORT_TEXT_TO_DB(Document.id_to_text)
        - subtype = Document.subtype # historical or editorial
        - volume = Document.volume
        - date = AUX(Document.date)
        - year = INT(Document.year)
        - title = Document.title
        - era = Document.era
        - personSentBy = Document.person_sentby #[]
        - personSentTo = Document.person_sentto #[]
        - personMentioned = Document.person_mentioned #[]
        - instutionSentBy = Document.inst_sentby #[]
        - instutionSentTo = Document.inst_sentto #[]
        - instutionMentioned = Document.inst_mentioned #[]
    NODE("Volume") volume:
        + id = Document.volume
        #- name = 
        #- preface =
    ONLY_CREATE_IF_EXISTS(NODE("Source"), 'source') source:
        + name = Document.source
    ONLY_CREATE_IF_EXISTS(NODE("City"), 'city') city:
        + name = Document.city
    RELATION(document, "INSTANCE_OF", volume):
    ONLY_CREATE_IF_EXISTS(RELATION(document, "STORED", source), 'source'):
    ONLY_CREATE_IF_EXISTS(RELATION(document, "FROM", city), 'city'):


ENTITY("Country"):
    NODE("Country") country:
        + name = Country.countryLabel
        - url = Country.countryTag # DO: url -> tag
#        - capital = Country.capital
#        - governance = Country.governance
#        - continent = Country.continent
#        - region = Country.region


ENTITY("CityCountry"):
    NODE("City") city:
        + name = CityCountry.name
        - name_list = CityCountry.name_list
    ONLY_CREATE_IF_EXISTS(NODE("Country"), 'country') country:
        + name = CityCountry.country
    ONLY_CREATE_IF_EXISTS(RELATION(city, "LOCATED_IN", country), 'country'):


ENTITY("Year"):
    NODE("Year") year:
        + year = INT(Year.year)
    RELATION(MATCH("Document", year=INT(Year.year)), "DATED", year):


ENTITY("Era"):
    NODE("PresidentialEra") pe:
        + name = Era.president
        - startDate = AUX(Era.startDate)
        - endDate = AUX(Era.endDate)
        - startYear = INT(Era.startYear)
        - endYear = INT(Era.endYear)
    RELATION(MATCH("Document", era=Era.president), "DURING", pe):
    RELATION(pe, "STARTED_AT", MATCH("Year", year=INT(Era.startYear))):
    RELATION(pe, "ENDED_AT", MATCH("Year", year=INT(Era.endYear))):


ENTITY("Person"):
    NODE("Person") person:
        + name = Person.name_set
        - name_list = Person.name_list
        - id_list = Person.id_list
        - description_list = Person.description_list
        - candidate_wiki_entries = Person.wiki_col
        - selected_wiki_entity = Person.selected_wiki_entity
        - gender = Person.gender
        - religion = Person.religion


ENTITY("PersonSentBy"):
    NODE("Person") person:
        + name = PersonSentBy.person_name
    NODE("Document") document:
        + docID = PersonSentBy.sent
    RELATION(document, "SENT_BY", person):
        # dateSent = PersonSentBy.dateSent


ENTITY("PersonSentTo"):
    NODE("Person") person:
        + name = PersonSentTo.person_name
    NODE("Document") document:
        + docID = PersonSentTo.received
    RELATION(document, "SENT_TO", person):


ENTITY("PersonMentionedIn"):
    NODE("Person") person:
        + name = PersonMentionedIn.person_name
    NODE("Document") document:
        + docID = PersonMentionedIn.mentioned_in
    RELATION(document, "MENTIONED", person):


ENTITY("Citizenship"):
    NODE("Person") person:
        + name = Citizenship.person_name
    NODE("Country") country:
        + name = Citizenship.country # be careful with historical countries
    RELATION(person, "CITIZEN_OF", country):
        - started = Citizenship.startyearLabel
        - ended = Citizenship.endyearLabel


ENTITY("Occupation"):
    NODE("Person") person:
        + name = Occupation.person_name
    NODE("Occupation") occupation:
        + name = Occupation.job_name
        - tag = Occupation.job_tag
    RELATION(person, "WORKED_AS", occupation):


ENTITY("School"):
    NODE("Person") person:
        + name = School.person_name
    NODE("School") school:
        + name = School.school_name
        - tag = School.school_tag
    RELATION(person, "EDUCATED_AT", school):
    #RELATION(school, "IN", MATCH("Country", name=School.school_country)):


ENTITY("PoliticalParty"):
    NODE("Person") person:
        + name = PoliticalParty.person_name
    NODE("PoliticalParty") party:
        + name = PoliticalParty.party_name
        - tag = PoliticalParty.party_tag
        #- ideology
    RELATION(person, "MEMBER_OF", party):
        - started = PoliticalParty.startyearLabel
        - ended = PoliticalParty.endyearLabel
    #RELATION(party, "IN", MATCH("Country", name=PoliticalParty.party_country)):


ENTITY("Role"):
    NODE("Person") person:
        + name = Role.person_name
    NODE("Role") role:
        + name = Role.role_name
        - tag = Role.role_tag
    RELATION(person, "POSITION_HELD", role):
        - started = Role.startyearLabel
        - ended = Role.endyearLabel
    #RELATION(role, "IN", MATCH("Country", name=Role.role_country)):


#ENTITY("Instution"):
#    NODE("Instution") inst:
#        + id = INT(Instution.id)
#        - name = Instution.name
#        - description = Instution.description
#    RELATION(person, "SENT_BY", MATCH("Document", personSentBy=Person.id)):
#    RELATION(person, "SENT_TO", MATCH("Document", personSentTo=Person.id)):